mandatory ask "Please enter the PNR:" assign to PNR
send "ig"
send "RT"+PNR

// Checking Airline(s) and Travel date and passenger count
send "RTA"

capture line:2, column:30, length:2 assign to HK1Test
if (HK1Test=="HK"){
  assign "1" to segmentsCount
  capture line:2, column:6, length:2 assign to Airline1
  capture line:2, column:15, length:5 assign to TravelDate
  capture line:2, column:23, length:3 assign to OriginCity
  capture line:2, column:32, length:1 assign to PassengerCount
  capture line:3, column:30, length:2 assign to HKnextTest
  if (HKnextTest=="HK"){
    assign "2" to segmentsCount
    capture line:4, column:30, length:2 assign to HK3Test
    if (HK3Test=="HK"){
      assign "3" to segmentsCount
      capture line:5, column:30, length:2 assign to HK4Test
      if (HK4Test=="HK"){
          assign "4" to segmentsCount
          capture line:6, column:30, length:2 assign to HK5Test
          if (HK5Test=="HK"){
            assign "5" to segmentsCount
            capture line:7, column:30, length:2 assign to HK6Test
            if (HK6Test=="HK"){
                assign "6" to segmentsCount
                capture line:8, column:30, length:2 assign to HK7Test
                if (HK7Test=="HK"){
                    send "SmartFlow now working on more than 6 segments"
                    ask "ignore?" assign to qz5
                    send "ig"
                    call "test1"
                }
            }
          }
      }
    }
  }

}
else{
capture line:3, column:30, length:2 assign to HK2Test
if (HK2Test=="HK"){
  assign "1" to segmentsCount
  capture line:3, column:6, length:2 assign to Airline1
  capture line:3, column:15, length:5 assign to TravelDate
  capture line:3, column:23, length:3 assign to OriginCity
  capture line:3, column:32, length:1 assign to PassengerCount
  capture line:4, column:30, length:2 assign to HKnextTest
      if (HKnextTest=="HK"){
        assign "2" to segmentsCount
        capture line:5, column:30, length:2 assign to HK3Test
        if (HK3Test=="HK"){
          assign "3" to segmentsCount
          capture line:6, column:30, length:2 assign to HK4Test
          if (HK4Test=="HK"){
              assign "4" to segmentsCount
              capture line:7, column:30, length:2 assign to HK5Test
              if (HK5Test=="HK"){
                assign "5" to segmentsCount
                capture line:8, column:30, length:2 assign to HK6Test
                if (HK6Test=="HK"){
                    assign "6" to segmentsCount
                    capture line:9, column:30, length:2 assign to HK7Test
                    if (HK7Test=="HK"){
                        send "SmartFlow now working on more than 6 segments"
                        ask "ignore?" assign to qz5
                        send "ig"
                        call "test1"
                    }
                }
              }
          }
        }
      }
}

else{
  send "Not Confirmed Segments please, check again!"
  ask "Stop and Review" assign to qz5
  send "ig"
}
}

// ignore >4 segments or >6 passengers

// Checking the Airline

// Non-voidable airlines: A3, ER, H1, NP, R5, UK with AI
  if (Airline1=="A3") {
    send "A3 airline is non-voidable for (P,U,T,S) Classes"
    ask "Stop and Review" assign to qz5
    send "ig"
  }
  if (Airline1=="ER"){
    send "ER airline is non-voidable"
    ask "Stop and Review" assign to qz5
    send "ig"
  }
  if (Airline1=="H1"){
    send "H1 airline is non-voidable"
    ask "Stop and Review" assign to qz5
    send "ig"
  }
  if (Airline1=="R5"){
    send "R5 airline is non-voidable within 24 HRs"
    ask "Stop and Review" assign to qz5
  }
  if (Airline1=="UK"){
    send "UK airline is non-voidable"
    ask "Stop and Review" assign to qz5
    send "ig"
  }

  if (Airline1=="SV"){
    send "SV airline is non-voidable (EX-EGY) (EX-PAK)"
    ask "Stop and Review" assign to qz5
    send "ig"
  }
  if (Airline1=="NP"){
    send "NP airline is non-voidable (EX-EGY) (EX-PAK)"
    ask "Stop and Review" assign to qz5
    send "ig"
  }
  if (Airline1=="NE"){
    send "NE airline is non-voidable (EX-EGY) (EX-PAK)"
    ask "Stop and Review" assign to qz5
    send "ig"
  }
  if (Airline1=="XQ"){
    send "XQ airline is non-voidable (EX-EGY) (EX-PAK)"
    ask "Stop and Review" assign to qz5
    send "ig"
  }

if (OriginCity=="ASW"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="ATZ"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="CAI"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="DBB"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="HBE"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="HMB"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="HRG"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="LXR"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="RMF"){
  assign "TRUE" to EXEGYCheck
}
if (OriginCity=="SSH"){
  assign "TRUE" to EXEGYCheck
}

if (OriginCity=="AAW"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="BDN"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="WGB"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="BHV"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="BNP"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="BHW"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="BHC"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="CWP"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="REQ"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="CHB"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="CJL"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="DDU"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="DBA"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="DEA"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="DSK"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="LYP"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="GIL"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="GRT"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="GWD"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="HDD"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="ISB"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="JAG"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="JIW"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="KCF"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="KBH"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="KHI"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="KDD"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="OHT"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="LHE"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="LRG"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="XJM"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="HRA"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="MWD"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="MPD"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SKZ"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="MUX"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="MFG"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="WNS"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="NHS"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="ORW"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="PJG"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="PAJ"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="PSI"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="PEW"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="UET"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="RYK"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="RAZ"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SWN"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SDT"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SGI"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SYW"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SKT"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SBQ"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="KDU"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="SUL"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="TFT"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="TLB"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="TUK"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="WAF"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="ZIZ"){
  assign "TRUE" to EXPAKCheck
}
if (OriginCity=="PZH"){
  assign "TRUE" to EXPAKCheck
}

if (EXPAKCheck != "TRUE"){
if (EXEGYCheck != "TRUE"){
    send "THIS's NOT EX EGY/PAK DEAL!"
    mandatory ask "PLease check the departure city again!" assign to qz5
}
}
else{
    send "ESKHIPK210I-B"
    send "RFEXPAK;er"
}

  //Today dates aren't considered
  if (TravelDate == today){
    send  "No void for today flights"
    ask "Check again please!" assign to qz
    send "ig"
  }

send "tqm"
   capture line:1, column:1, length:20 assign to emdTest

  if (emdTest != "NO TSM RECORD EXISTS"){
    send "EMD! Please stop and check."
    mandatory ask "Ignore!" assign to qz5
    send "ig"
  }
 send "PV"
  capture line:8, column:30, length:8 assign to thisOffice
  capture line:2, column:30, length:9 assign to thisOfficeName
 
    //opening the ticket:
  send "rttn"

        capture line:2, column:5, length:2 assign to FA1
          if (FA1=="FA"){
            assign "1" to FACount
            capture line:2, column:8, length:3 assign to PAXtest
            if (PAXtest=="PAX"){
            capture line:2, column:12, length:14 assign to TnFA1
            }
          }
          capture line:3, column:5, length:2 assign to FA2
          if (FA2=="FA"){
              if (FACount=="1"){
                  assign "2" to FACount
              }
              else {
                  assign "1" to FACount
              }
              capture line:3, column:8, length:3 assign to PAXtest    
              if (PAXtest=="PAX"){
                capture line:3, column:12, length:14 assign to TnFA1
              }
          }
          capture line:4, column:5, length:2 assign to FA3
          if (FA3=="FA"){
              if (FACount=="2"){
                  assign "3" to FACount
              }
              else{
                  assign "2" to FACount
              }
              capture line:4, column:8, length:3 assign to PAXtest
              if (PAXtest=="PAX"){
                capture line:4, column:12, length:14 assign to TnFA1
              }
          }
          capture line:5, column:5, length:2 assign to FA4
          if (FA4=="FA"){
                if (FACount=="3"){
                  assign "4" to FACount
                }
                else{
                  assign "3" to FACount
                }
                capture line:5, column:8, length:3 assign to PAXtest
                if (PAXtest=="PAX"){
                  capture line:5, column:12, length:14 assign to TnFA1
                }
          }
          capture line:6, column:5, length:2 assign to FA5
          if (FA5=="FA"){
                if (FACount=="4"){
                  assign "5" to FACount
                }
                else{
                  assign "4" to FACount
                }
                capture line:6, column:8, length:3 assign to PAXtest
                if (PAXtest=="PAX"){
                    capture line:6, column:12, length:14 assign to TnFA1
                }
          }
          capture line:7, column:5, length:2 assign to FA6
          if (FA6=="FA"){
                if (FACount=="5"){
                  assign "6" to FACount
                }
                else{
                  assign "5" to FACount
                }
                capture line:7, column:8, length:3 assign to PAXtest
                if (PAXtest=="PAX"){
                    capture line:7, column:12, length:14 assign to TnFA1
                }
          }
          capture line:8, column:5, length:2 assign to FA7
          if (FA7=="FA"){
                if (FACount=="6"){
                  assign "7" to FACount
                }
                else{
                  assign "6" to FACount
                }
                capture line:8, column:8, length:3 assign to PAXtest
                if (PAXtest=="PAX"){
                    capture line:8, column:12, length:14 assign to TnFA1
                }
          }
          capture line:9, column:5, length:2 assign to FA8
          if (FA8=="FA"){
                if (FACount=="7"){
                    assign "8" to FACount
                }
                else{
                  assign "7" to FACount
                }
                capture line:9, column:8, length:3 assign to PAXtest
                if (PAXtest=="PAX"){
                    capture line:9, column:12, length:14 assign to TnFA1
                }
          }
          capture line:10, column:5, length:2 assign to FA9
          if (FA9=="FA"){
              if (FACount=="8"){
                  assign "9" to FACount
              }
              else{
                assign "8" to FACount
              }
              capture line:10, column:8, length:3 assign to PAXtest
              if (PAXtest=="PAX"){
                 capture line:10, column:12, length:14 assign to TnFA1
              }
          }
          capture line:11, column:5, length:2 assign to FA10
          if (FA10=="FA"){
              if (FACount=="9"){
                  send "More than 9 FA"
                  mandatory ask "Please continue manually as there're more than 9 FA(s)" assign to qz5
                  send "ig"
              }
              else{
                  assign "9" to FACount
              }
              capture line:11, column:8, length:3 assign to PAXtest
              if (PAXtest=="PAX"){
                 capture line:11, column:12, length:14 assign to TnFA1
              }
          }
    //if (PassengerCount!=FACount){
      //  send "FA missing or they're separate, please continue manually"
        //ask "Continue?" assign to qz5
    //}
send "TWD/TKT" +TnFA1

    capture line:2, column:44, length:5 assign to DOITEST
    capture line:2, column:57, length:8 assign to ticketingOffice

  if (DOITEST!=today){
    send "N0 Void as DOI-" +DOITEST
    ask "Ignore?" assign to qz5
    send "ig"
  }

  if (ticketingOffice!= thisOffice){
      send "PV/" +ticketingOffice
      mandatory ask "please continue in this office" assign to qz5
      send "ig"
  }

capture line:4, column:47, length:1 assign to FST1
if (FST1=="C"){
           send "Please check status!"
           ask "The CST checked in" assign to qz5
           send "ig"
}

send "tqt"
        capture line:1, column:1, length:3 assign to tqtSpace
        if (tqtSpace == "T  "){
            capture  line:2, column:1, length:2 assign to tqtNumber
            send "tqt/t" +tqtNumber
        }

choose "Whould you like to Void?" until "Yes"{
when ("No"){ call "After (EX)" 
}
}
send "TRDC/ALL"
capture line:1, column:1, length:26 assign to Voidmsg
                      if (Voidmsg!="OK - DOCUMENT(S) CANCELLED"){
                          assign "1" to checkvoidedtickets
                          capture line:7, column:23, length:26 assign to Voidmsg1
                          capture line:8, column:23, length:26 assign to Voidmsg2
                          capture line:9, column:23, length:26 assign to Voidmsg3
                          capture line:10, column:23, length:26 assign to Voidmsg4
                          capture line:11, column:23, length:26 assign to Voidmsg5
                          capture line:12, column:23, length:26 assign to Voidmsg6
                          capture line:13, column:23, length:26 assign to Voidmsg7
                          capture line:14, column:23, length:26 assign to Voidmsg8
                          capture line:15, column:23, length:26 assign to Voidmsg9
                          capture line:16, column:23, length:26 assign to Voidmsg10
                          if (PassengerCount>"1"){
                              if (Voidmsg1!="OK - DOCUMENT(S) CANCELLED"){
                                  assign "0" to checkvoidedtickets
                              }
                              if (Voidmsg2!="OK - DOCUMENT(S) CANCELLED"){
                                  assign "0" to checkvoidedtickets
                              }
                              if (PassengerCount>"2"){
                                  if (Voidmsg3!="OK - DOCUMENT(S) CANCELLED"){
                                  assign "0" to checkvoidedtickets
                                  }
                                  if (PassengerCount>"3"){
                                    if (Voidmsg4!="OK - DOCUMENT(S) CANCELLED"){
                                      assign "0" to checkvoidedtickets
                                    }
                                    if (PassengerCount>"4"){
                                        if (Voidmsg5!="OK - DOCUMENT(S) CANCELLED"){
                                          assign "0" to checkvoidedtickets
                                        }
                                        if (PassengerCount>"5"){
                                            if (Voidmsg6!="OK - DOCUMENT(S) CANCELLED"){
                                              assign "0" to checkvoidedtickets
                                            }
                                            if (PassengerCount>"6"){
                                                if (Voidmsg7!="OK - DOCUMENT(S) CANCELLED"){
                                                    assign "0" to checkvoidedtickets
                                                }
                                                if (PassengerCount>"7"){
                                                  if (Voidmsg8!="OK - DOCUMENT(S) CANCELLED"){
                                                    assign "0" to checkvoidedtickets
                                                  }
                                                  if (PassengerCount>"8"){
                                                      if (Voidmsg9!="OK - DOCUMENT(S) CANCELLED"){
                                                        assign "0" to checkvoidedtickets
                                                      }
                                                      if (Voidmsg10=="OK - DOCUMENT(S) CANCELLED"){
                                                        assign "0" to checkvoidedtickets
                                                      }
                                                  }//>8
                                                }//>7
                                            }//>6
                                        }//>5
                                    }//>4
                                  }//>3
                              }//>2
                          }//>1
                          
                          if (checkvoidedtickets=="0"){
                            ask "Are the tickets voided?" assign to qz5
                          }
                        
                      }

call "After (EX)"